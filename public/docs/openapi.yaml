openapi: 3.0.3
info:
  title: 'Buy Together API Documentation'
  description: 'This API aims to provide all the information you need in order to work with our API'
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/register:
    post:
      summary: 'User registration'
      operationId: userRegistration
      description: "This endpoint allows you to register a new user.\n<aside class=\"notice\">\nUsers will not be able to create or join purchase goals if they are not registered and logged in\n</aside>"
      parameters: []
      responses: {  }
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: sknonxvhbdfqioxelfzhdsfu
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: rosalind75@example.org
                  nullable: true
                password:
                  type: string
                  description: ''
                  example: '^]C"<"<!TUNt'
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: quia
                  nullable: false
                phone_number:
                  type: string
                  description: ''
                  example: illum
                  nullable: false
                profile_pic:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 51200 kilobytes.'
                  nullable: true
              required:
                - name
                - password
                - address
                - phone_number
      security: []
  /api/login:
    post:
      summary: 'User authentication'
      operationId: userAuthentication
      description: "This endpoint allows authenticate or log in a user.\n<aside class=\"notice\">\nAn authentication token is always generated upon successful login.\n</aside>"
      parameters: []
      responses: {  }
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: odie74@example.net
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: '6;?lB9x6U"I]t)cfOu&1'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: 'User logout from application'
      operationId: userLogoutFromApplication
      description: "This endpoint allows you to logout a user from your app.\n<aside class=\"notice\">\nIt requires the auth token of the user to be logged out\n</aside>"
      parameters: []
      responses: {  }
      tags:
        - Authentication
      security: []
  '/api/purchase-goals/{id}/change-status':
    post:
      summary: 'Change the status of specified purchase goal'
      operationId: changeTheStatusOfSpecifiedPurchaseGoal
      description: "<aside class=\"notice\">\nOnly the owner of the goal can change its status from open to close and vice versa.\n</aside>"
      parameters: []
      responses: {  }
      tags:
        - 'Purchase Goals'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the purchase goal.'
        example: aut
        required: true
        schema:
          type: string
  /api/purchase-goals:
    get:
      summary: 'Listing of all purchase goals.'
      operationId: listingOfAllPurchaseGoals
      description: "This endpoint allows users to view purchase goals.\n<aside class=\"notice\">\nUsers must NOT be authenticated to access this endpoint.\n</aside>"
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Purchase goals retrieved successfully.'
                  statusCode: 200
                  data: []
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Purchase goals retrieved successfully.'
                  statusCode:
                    type: integer
                    example: 200
                  data:
                    type: array
                    example: []
      tags:
        - 'Purchase Goals'
      security: []
    post:
      summary: 'Create a new purchase goal.'
      operationId: createANewPurchaseGoal
      description: "This endpoint allows users to create a purchase goal.\n<aside class=\"notice\">\nUsers must be authenticated to access this endpoint.\n</aside>"
      parameters: []
      responses: {  }
      tags:
        - 'Purchase Goals'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zotjgcurbqueiftgw
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Molestiae exercitationem qui corrupti sint.'
                  nullable: false
                target_amount:
                  type: number
                  description: 'Must be at least 0.'
                  example: 49
                  nullable: false
                amount_per_person:
                  type: number
                  description: 'Must be at least 0.'
                  example: 45
                  nullable: true
                product_name:
                  type: string
                  description: ''
                  example: suscipit
                  nullable: false
                product_description:
                  type: string
                  description: ''
                  example: quis
                  nullable: false
                product_unit_price:
                  type: number
                  description: 'Must be at least 0.'
                  example: 25
                  nullable: false
                product_bulk_price:
                  type: number
                  description: 'Must be at least 0.'
                  example: 83
                  nullable: true
                product_quantity:
                  type: number
                  description: 'Must be at least 0.'
                  example: 77
                  nullable: false
                product_image:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 51200 kilobytes.'
                  nullable: true
                group_link:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: hpdzjsj
                  nullable: true
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-01-21T13:59:48'
                  nullable: false
                end_date:
                  type: string
                  description: 'Must be a valid date. Must be a date after or equal to <code>start_date</code>.'
                  example: '2067-09-18'
                  nullable: true
              required:
                - title
                - description
                - target_amount
                - product_name
                - product_description
                - product_unit_price
                - product_quantity
                - start_date
      security: []
  '/api/purchase-goals/{id}':
    get:
      summary: 'Fetch details of a specific purchase goal.'
      operationId: fetchDetailsOfASpecificPurchaseGoal
      description: 'This endpoint allows users to view the details of a purchase goal by ID.'
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Purchase goal not found.'
                  statusCode: 404
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Purchase goal not found.'
                  statusCode:
                    type: integer
                    example: 404
      tags:
        - 'Purchase Goals'
      security: []
    put:
      summary: 'Update an existing purchase goal.'
      operationId: updateAnExistingPurchaseGoal
      description: "This endpoint allows users to update details of a purchase goal.\n<aside class=\"notice\">\nOnly the owner of the goal can update it.\n</aside>"
      parameters: []
      responses: {  }
      tags:
        - 'Purchase Goals'
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wxuv
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Enim iure enim sed odit et enim suscipit.'
                  nullable: false
                target_amount:
                  type: number
                  description: 'Must be at least 0.'
                  example: 77
                  nullable: false
                amount_per_person:
                  type: number
                  description: 'Must be at least 0.'
                  example: 52
                  nullable: true
                product_name:
                  type: string
                  description: ''
                  example: recusandae
                  nullable: false
                product_description:
                  type: string
                  description: ''
                  example: occaecati
                  nullable: false
                product_unit_price:
                  type: number
                  description: 'Must be at least 0.'
                  example: 16
                  nullable: false
                product_bulk_price:
                  type: number
                  description: 'Must be at least 0.'
                  example: 31
                  nullable: true
                product_quantity:
                  type: number
                  description: 'Must be at least 0.'
                  example: 4
                  nullable: false
                product_image:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 51200 kilobytes.'
                  nullable: true
                group_link:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: vinitbvdhsqgnzhhjcmdtlw
                  nullable: true
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-01-21T13:59:48'
                  nullable: false
                end_date:
                  type: string
                  description: 'Must be a valid date. Must be a date after or equal to <code>start_date</code>.'
                  example: '2038-10-09'
                  nullable: true
      security: []
    delete:
      summary: 'Delete a purchase goal.'
      operationId: deleteAPurchaseGoal
      description: "This endpoint allows users to delete a specific purchase goal by ID.\n<aside class=\"notice\">\nOnly the owner of the goal can delete it.\n</aside>"
      parameters: []
      responses: {  }
      tags:
        - 'Purchase Goals'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the purchase goal.'
        example: 20
        required: true
        schema:
          type: integer
  '/api/purchase-goals/{id}/participants':
    get:
      summary: 'Get participants of a purchase goal.'
      operationId: getParticipantsOfAPurchaseGoal
      description: 'Retrieve all participants of a specified purchase goal.'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User Participation'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the purchase goal.'
        example: 20
        required: true
        schema:
          type: integer
  '/api/purchase-goals/{id}/join':
    post:
      summary: 'Join a purchase goal.'
      operationId: joinAPurchaseGoal
      description: 'Allows a user to join a specific purchase goal.'
      parameters: []
      responses: {  }
      tags:
        - 'User Participation'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the purchase goal.'
        example: 4
        required: true
        schema:
          type: integer
  '/api/purchase-goals/{id}/approve/{user_id}':
    post:
      summary: 'Approve a purchase goal.'
      operationId: approveAPurchaseGoal
      description: 'Allows a user to APPROVE another user to join purchase goal.'
      parameters: []
      responses: {  }
      tags:
        - 'User Participation'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the purchase goal.'
        example: 11
        required: true
        schema:
          type: integer
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 20
        required: true
        schema:
          type: integer
  '/api/purchase-goals/{id}/decline/{user_id}':
    post:
      summary: 'Decline request to join a purchase goal.'
      operationId: declineRequestToJoinAPurchaseGoal
      description: 'Allows user to DECLINE a request from another user to join purchase goal.'
      parameters: []
      responses: {  }
      tags:
        - 'User Participation'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the purchase goal.'
        example: 11
        required: true
        schema:
          type: integer
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 13
        required: true
        schema:
          type: integer
tags:
  -
    name: Authentication
    description: 'Endpoints for login, registration, and logout'
  -
    name: 'Purchase Goals'
    description: 'Endpoints for managing purchase goals'
  -
    name: 'User Participation'
    description: 'Endpoints for managing user participation in purchase goals'
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
